version: 2.1
orbs:
  python: circleci/python@2
  docker: circleci/docker@3.1.0 
jobs:

  test-python:
    docker:
      - image: cimg/python:3.11-node
    parallelism: 4
    resource_class: large
    steps:
      - checkout
      - python/install-packages
      - run:
          name: Ejecutar tests
          command: |
            set -e
            TEST_FILES=$(circleci tests glob "./**/test_*.py" | circleci tests split --split-by=timings)
            mkdir -p test-results
            pytest -n auto -o junit_family=xunit1 --verbose --junitxml=test-results/junit.xml $TEST_FILES || true
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  flake8:
    docker:
      - image: cimg/python:3.11-node
    steps:
      - checkout
      - python/install-packages
      - run:
          name: Run flake8
          command: flake8 --ignore=E501 --exclude=.venv,.git,__pycache__ . || true

  bandit:
    docker:
      - image: cimg/python:3.11-node
    steps:
      - checkout
      - run:
          name: Install bandit
          command: pip install bandit
      - run:
          name: Run bandit
          command: bandit -r ./app || true


  trivy:
    docker:
      - image: aquasec/trivy
    steps:
      - checkout
      - run:
          name: Run Trivy
          command: trivy fs ./app || true

  build-and-push:
    docker:
      - image: cimg/python:3.11-node
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t capstone-backend:${CIRCLE_SHA1} -f Containerfile .
            docker tag capstone-backend:${CIRCLE_SHA1} capstone-backend:latest
      - run:
          name: Push to registry
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push capstone-backend:${CIRCLE_SHA1}
            docker push capstone-backend:latest

  deploy-to-k8s:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
      - run:
          name: Configure kubectl
          command: |
            echo $KUBE_CONFIG_DATA | base64 -d > kubeconfig
            export KUBECONFIG=kubeconfig
      - run:
          name: Deploy to Kubernetes
          command: |
            export KUBECONFIG=kubeconfig
            # Update image tag in deployment
            sed -i "s|capstone-backend:latest|capstone-backend:${CIRCLE_SHA1}|g" k8s/deployment.yaml
            # Apply configurations
            kubectl apply -f k8s/configmap.yaml
            kubectl apply -f k8s/secrets.yaml
            kubectl apply -f k8s/deployment.yaml
            # Wait for deployment to be ready
            kubectl rollout status deployment/capstone-backend-deployment --timeout=300s

# workflows:
#   version: 2
#   build-validate-and-deploy:
#     jobs:
#       - test-python
#       - flake8
#       - bandit
#       - trivy

#       - hold:
#           type: approval
#           requires:
#             - test-python
#             - flake8
#             - bandit
#             - trivy

#       - deploy:
#           requires:
#             - hold

workflows:
  build-test-and-deploy:
    jobs:
      - test-python
      - flake8
      - bandit
      - trivy
      - build-and-push:
          requires:
            - test-python
            - flake8
            - bandit
            - trivy
      - hold-for-approval:
          type: approval
          requires:
            - build-and-push
      - deploy-to-k8s:
          requires:
            - hold-for-approval