name: CI

# 1. Disparadores: en push a main/develop y en pull requests
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - '**'

jobs:
  # 2. Job de tests en paralelo con múltiples versiones de Python
  test:
    name: Ejecutar tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]
    steps:
      # 2.1 Checkout del código
      - uses: actions/checkout@v3

      # 2.2 Instalación del intérprete Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 2.3 Caché de dependencias pip
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      # 2.4 Instalación de dependencias
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # si tienes un archivo separado para dev/test:
          pip install -r requirements-dev.txt

      # 2.5 Ejecutar pytest
      - name: Ejecutar tests con pytest
        run: |
          pytest -n auto \
            --junitxml=test-results/junit.xml \
            --verbose

      # 2.6 Subir los resultados como artefacto
      - name: Guardar resultados de test
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results

  # 3. Job de lint (se ejecuta tras test)
  lint:
    name: Comprobar estilo con flake8
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Instalar flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Ejecutar flake8
        run: flake8 --ignore=E501 --exclude=.venv,.git,__pycache__ .